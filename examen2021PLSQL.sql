--1. Crea un paquete con la siguiente nomenclatura TUNOMBREgestioncarreras que contendrá la
--función y el procedimiento solicitados en el ejercicio 2 y ejercicio3. Es decir tendrá
---Función listadocaballos que no recibirá ningún parámetro y devolverá un número.
-- Procedimiento agregarcaballos que recibirá como argumento el nombre, peso, fecha
--de nacimiento, nacionalidad y el dni y el nombre del dueño.

CREATE OR REPLACE
PACKAGE JESUSGESTIONCARRERAS AS
 	FUNCTION LISTADOCABALLOS RETURN NUMBER;
	PROCEDURE agregarcaballos (NOMBRE VARCHAR2, PESO NUMBER, FECHA_NACIMINETO DATE, 
	NACIONALIDAD VARCHAR2, DNI VARCHAR2, NOMBRE_DUEÑO VARCHAR2);
END JESUSGESTIONCARRERAS;

CREATE OR REPLACE PACKAGE BODY CABALLOS.JESUSGESTIONCARRERAS IS 

	FUNCTION LISTADOCABALLOS 
	RETURN NUMBER 
	IS
	
	--Cursor explicito de caballos y propetario
	CURSOR C_INFO_CABALLO_PROPIETARIO IS 
		SELECT C.NOMBRE AS NOMBRE_C, C.PESO, P2.NOMBRE AS NOMBRE_P, C.CODCABALLO
		FROM CABALLOS c, PERSONAS p2 
		WHERE C.PROPIETARIO = P2.CODIGO
		ORDER BY C.NACIONALIDAD, P2.NOMBRE DESC;
	
	--Cursor explicito de jockey y carrera
	CURSOR C_INFO_JOCKEY_CARRERA(V_COD_CABALLO CABALLOS.CODCABALLO%TYPE) IS
		SELECT C.NOMBRECARRERA, P2.NOMBRE AS NOMBRE_J, C.FECHAHORA, P.POSICIONFINAL, C.IMPORTEPREMIO
		FROM PARTICIPACIONES p, PERSONAS p2, CARRERAS c
		WHERE C.CODCARRERA = P.CODCARRERA 
		AND P.JOCKEY = P2.CODIGO
		AND p.CODCABALLO = V_COD_CABALLO
		ORDER BY C.NOMBRECARRERA, P2.NOMBRE DESC;

	NUMERO_CARRERA_GANADAS NUMBER := 0;
	TOTAL_IMPORTE NUMBER := 0;
	NUM_CABALLO NUMBER := 0;
	
	
	BEGIN
		DBMS_OUTPUT.PUT_LINE('INFORME DE LOS CABALLOS EXISTENTES EN LA BASE DE DATOS');
		FOR REGISTRO_C IN C_INFO_CABALLO_PROPIETARIO LOOP
				DBMS_OUTPUT.PUT_LINE(' ');
				DBMS_OUTPUT.PUT_LINE('Caballo: ' || REGISTRO_C.NOMBRE_C);
				DBMS_OUTPUT.PUT_LINE('Peso: ' || REGISTRO_C.PESO);
				DBMS_OUTPUT.PUT_LINE('Nombre del Propietario: ' || REGISTRO_C.NOMBRE_P);
				DBMS_OUTPUT.PUT_LINE(' ');
			FOR REGISTRO_P IN C_INFO_JOCKEY_CARRERA(REGISTRO_C.CODCABALLO) LOOP
				DBMS_OUTPUT.PUT_LINE(' ');
				DBMS_OUTPUT.PUT_LINE('		Nombre de Carrera			Nombre del Jockey			Fecha			PosiciónFinal			Importe Premio');
				DBMS_OUTPUT.PUT_LINE('				'||REGISTRO_P.NOMBRECARRERA||'				'||REGISTRO_P.NOMBRE_J||'				'||REGISTRO_P.FECHAHORA||'				'||REGISTRO_P.POSICIONFINAL||'				'||REGISTRO_P.IMPORTEPREMIO);
				DBMS_OUTPUT.PUT_LINE(' ');

				
				IF REGISTRO_P.POSICIONFINAL = 1 THEN
					NUMERO_CARRERA_GANADAS := NUMERO_CARRERA_GANADAS+1;
				END IF;
				TOTAL_IMPORTE := TOTAL_IMPORTE+REGISTRO_P.IMPORTEPREMIO;
			END LOOP;
					DBMS_OUTPUT.PUT_LINE(' ');
					DBMS_OUTPUT.PUT_LINE('		Número de carreras ganadas: ' || NUMERO_CARRERA_GANADAS);
					DBMS_OUTPUT.PUT_LINE('		Total del importe de todos sus premios: '||TOTAL_IMPORTE);
					DBMS_OUTPUT.PUT_LINE(' ');
					NUMERO_CARRERA_GANADAS:=0;
					TOTAL_IMPORTE := 0;
					NUM_CABALLO := NUM_CABALLO+1;
		END LOOP;
		
		RETURN NUM_CABALLO;
	END LISTADOCABALLOS;

	PROCEDURE agregarcaballos (NOMBRE VARCHAR2, PESO NUMBER, FECHA_NACIMINETO DATE, 
	NACIONALIDAD VARCHAR2, DNI VARCHAR2, NOMBRE_DUEÑO VARCHAR2)
	IS
	
	CANTIDAD_COD_DUENNIO NUMBER := 0;
	V_COD_CABALLO NUMBER := 0;
	COD_DUENNIO NUMBER := 0;
	V_NACIONALIDAD VARCHAR2(40);	

	BEGIN
		--Compruebo que existe el propietario
		SELECT COUNT(P.CODIGO) INTO CANTIDAD_COD_DUENNIO
		FROM PERSONAS p, CABALLOS c 
		WHERE P.CODIGO = C.PROPIETARIO
		AND P.DNI LIKE DNI;
		
		IF COD_DUENNIO = 0 THEN
			
			SELECT MAX(P.CODIGO)+1 INTO CANTIDAD_COD_DUENNIO
			FROM PERSONAS p;
		
			INSERT INTO PERSONAS(CODIGO,DNI,NOMBRE) VALUES (CANTIDAD_COD_DUENNIO,DNI,NOMBRE_DUEÑO);
			
			SELECT MAX(C.CODCABALLO)+1 INTO V_COD_CABALLO
			FROM CABALLOS c;
		
			INSERT INTO CABALLOS VALUES (V_COD_CABALLO,NOMBRE,PESO,FECHA_NACIMINETO,CANTIDAD_COD_DUENNIO,NACIONALIDAD);
		
			COMMIT;
		
		ELSE
		
			SELECT CODIGO INTO COD_DUENNIO
			FROM PERSONAS p
			WHERE P.DNI LIKE DNI;
		
			SELECT MAX(C.CODCABALLO)+2 INTO V_COD_CABALLO
			FROM CABALLOS c;
			
			INSERT INTO CABALLOS VALUES (V_COD_CABALLO,NOMBRE,PESO,FECHA_NACIMINETO,COD_DUENNIO,NACIONALIDAD);
		
			COMMIT;
		
		END IF;
	
		EXCEPTION
        WHEN NO_DATA_FOUND THEN
            COD_DUENNIO:=COD_DUENNIO+1;
            INSERT INTO PERSONAS(CODIGO ,DNI ,NOMBRE) VALUES (COD_DUENNIO ,DNI ,NOMBRE_DUEÑO);
	
		SELECT C.NACIONALIDAD INTO V_NACIONALIDAD
		FROM CABALLOS c 
		WHERE C.CODCABALLO = V_COD_CABALLO;
	
		IF V_NACIONALIDAD IS NULL THEN
			UPDATE CABALLOS SET NACIONALIDAD = 'ESPAÑOL' WHERE CODCABALLO = V_COD_CABALLO;
		END IF;
		
	END agregarcaballos;

END JESUSGESTIONCARRERAS;


BEGIN
	JESUSGESTIONCARRERAS.agregarcaballos('El locotronEES',250,to_date('19/02/2003','DD/MM/YYYY'),'ALEMAN','6456731B','Jose');
END;

SELECT JESUSGESTIONCARRERAS.LISTADOCABALLOS()
FROM DUAL;

